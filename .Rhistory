print(transactions_list)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
# Đọc dữ liệu từ file CSV
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
# Thay thế 's' bằng 1. Đối với 'e', chúng ta sẽ xử lý sau khi tính toán được giá trị cụ thể cho mỗi USERID
data[data == "s"] <- "1"
# Đảm bảo tất cả các cột từ A1 đến A10 đều là kiểu character để có thể kết hợp chúng
data[, 2:ncol(data)] <- lapply(data[, 2:ncol(data)], as.character)
# Chuyển đổi từ cột sang dòng
data_long <- pivot_longer(data, cols = starts_with("A"), names_to = "Event", values_to = "Time")
# Lọc bỏ các dòng có giá trị Time là NA hoặc rỗng
data_long <- filter(data_long, !is.na(Time) & Time != "")
# Tính 'e' dựa trên chiều dài của Time cho mỗi USERID
data_long <- data_long %>%
group_by(USERID) %>%
mutate(Time = ifelse(Time == "e", as.character(max(as.numeric(Time[Time != "e"]), na.rm = TRUE) + 1), Time))
# Đảm bảo cột Time là kiểu numeric để sắp xếp
data_long$Time <- as.numeric(data_long$Time)
# Sắp xếp dữ liệu theo USERID và Time
data_sorted <- arrange(data_long, USERID, Time)
# Tạo chuỗi sự kiện tuần tự cho mỗi USERID
data_sequences <- data_sorted %>%
group_by(USERID) %>%
summarise(Sequence = paste(Event, collapse = " "))
# Tạo danh sách các giao dịch cho mỗi USERID
transactions_list <- split(data_sorted$Event, data_sorted$USERID)
# Chuyển danh sách giao dịch thành đối tượng transactions
transactions <- as(transactions_list, "transactions")
# Kiểm tra cấu trúc của transactions
summary(transactions)
# Hiển thị dữ liệu đã được sắp xếp
print(transactions)
print(transactions_list)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
library(readxl)
library(data.table)
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
user_data <- data.table(
USERID = character(),
Time = integer(),
Event = character()
)
for (i in 1:nrow(data)) {
userid <- as.character(data[i, "USERID"])
for (j in 2:ncol(data))
{
value <- data[i, j]
if (!is.na(value))
{
if (value == 's')
{
user_data <- rbind(user_data, list(userid, 1, names(data)[j]))
} else if (value == 'e')
{
if (userid == 'U0')
{
user_data <- rbind(user_data, list(userid, 5, names(data)[j]))
}
else if (userid == 'U1') {
user_data <- rbind(user_data, list(userid, 6, names(data)[j]))
}
}
else if (as.integer(value) %in% 2:5) {
user_data <- rbind(user_data, list(userid, as.integer(value), names(data)[j]))
}
}
}
}
setkey(user_data, USERID, Time)
print(user_data)
library(data.table)
# Tạo danh sách các giao dịch cho mỗi USERID
transactions_list <- split(user_data$Event, user_data$USERID)
# Chuyển danh sách giao dịch thành đối tượng transactions
transactions <- as(transactions_list, "transactions")
# Kiểm tra cấu trúc của transactions
summary(transactions)
# Hiển thị dữ liệu đã được sắp xếp
print(transactions)
print(transactions_list)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
data[data == "s"] <- "1"
data[, 2:ncol(data)] <- lapply(data[, 2:ncol(data)], as.character)
data_long <- pivot_longer(data, cols = starts_with("A"), names_to = "Event", values_to = "Time")
data_long <- filter(data_long, !is.na(Time) & Time != "")
data_long <- data_long %>%
group_by(USERID) %>%
mutate(Time = ifelse(Time == "e", as.character(max(as.numeric(Time[Time != "e"]), na.rm = TRUE) + 1), Time))
data_long$Time <- as.numeric(data_long$Time)
data_sorted <- arrange(data_long, USERID, Time)
data_sequences <- data_sorted %>%
group_by(USERID) %>%
summarise(Sequence = paste(Event, collapse = " "))
transactions_list <- split(data_sorted$Event, data_sorted$USERID)
transactions <- as(transactions_list, "transactions")
summary(transactions)
print(transactions)
print(transactions_list)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
data[data == "s"] <- "1"
data[, 2:ncol(data)] <- lapply(data[, 2:ncol(data)], as.character)
data_long <- pivot_longer(data, cols = starts_with("A"), names_to = "Event", values_to = "Time")
data_long <- filter(data_long, !is.na(Time) & Time != "")
data_long <- data_long %>%
group_by(USERID) %>%
mutate(Time = ifelse(Time == "e", as.character(max(as.numeric(Time[Time != "e"]), na.rm = TRUE) + 1), Time))
data_long$Time <- as.numeric(data_long$Time)
data_sorted <- arrange(data_long, USERID, Time)
data_sequences <- data_sorted %>%
group_by(USERID) %>%
summarise(Sequence = paste(Event, collapse = " "))
transactions_list <- split(data_sorted$Event, data_sorted$USERID)
transactions <- as(transactions_list, "transactions")
summary(transactions)
print(transactions)
print(transactions_list)
write.csv(data_sorted, "hw_bigdata1.csv", row.names = FALSE)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
library(tidyr)
library(dplyr)
library(arules)
library(arulesSequences)
data <- read.csv("input1.csv", stringsAsFactors = FALSE)
data[data == "s"] <- "1"
data[, 2:ncol(data)] <- lapply(data[, 2:ncol(data)], as.character)
data_long <- pivot_longer(data, cols = starts_with("A"), names_to = "Event", values_to = "Time")
data_long <- filter(data_long, !is.na(Time) & Time != "")
data_long <- data_long %>%
group_by(USERID) %>%
mutate(Time = ifelse(Time == "e", as.character(max(as.numeric(Time[Time != "e"]), na.rm = TRUE) + 1), Time))
data_long$Time <- as.numeric(data_long$Time)
data_sorted <- arrange(data_long, USERID, Time)
data_sequences <- data_sorted %>%
group_by(USERID) %>%
summarise(Sequence = paste(Event, collapse = " "))
transactions_list <- split(data_sorted$Event, data_sorted$USERID)
transactions <- as(transactions_list, "transactions")
summary(transactions)
print(transactions)
print(transactions_list)
write.csv(data_sorted, "hw_bigdata1.csv", row.names = FALSE)
library(dplyr)
library(tidyr)
library(arules)
x <- read.csv("input1.csv", sep = ",", header = T)
convert_df <- x %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_df)
library(dplyr)
library(tidyr)
library(arules)
x <- read.csv("input1.csv", sep = ",", header = T)
convert_data <- x %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate(lapply(x, as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate(across(where(is.numeric | is.logical | is.factor), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate_if(is.numeric | is.factor | is.logical, as.character)%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
library(dplyr)
library(tidyr)
library(arules)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate_if(is.numeric | is.factor | is.logical, as.character)%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values = "Time",  event = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
library(dplyr)
library(tidyr)
library(arules)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
#mutate(across(everything(), as.character)) %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values = "Time",  event = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values = "Time",  names = "Event") %>%
filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
library(dplyr)
library(tidyr)
library(arules)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
#filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(
Time == "s" ~ -1,
Time == "e" ~ Inf,
TRUE ~ as.numeric(gsub("\\D", "", Time))
)) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
#filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
#Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
Time <- ifelse(Time == "s", -1,ifelse(Time == "e", Inf, as.numeric(gsub("\\D", "", Time))))%>%
filter(!is.na(Time) & Time != "") %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
#filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
#Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
Time <- ifelse(Time == "s", -1,ifelse(Time == "e", Inf, as.numeric(gsub("\\D", "", Time)))))%>%
filter(!is.na(Time) & Time != "") %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
#filter(!is.na(Time) & Time != "") %>%
mutate(
USERID_NUM = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(USERID_NUM, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
#filter(!is.na(Time) & Time != "") %>%
mutate(NUMBER_USERID = as.numeric(gsub("\\D", "", USERID) ),
Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(NUMBER_USERID, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
mutate(NUMBER_USERID = as.numeric(gsub("\\D", "", USERID) ))%>%
mutate(Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(NUMBER_USERID, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
mutate(NUMBER_USERID = as.numeric(gsub("\\D", "", USERID) ))%>%
mutate(Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(NUMBER_USERID, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
mutate(NUMBER_USERID = as.numeric(gsub("\\D", "", USERID) ))%>%
mutate(Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(NUMBER_USERID, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
write.csv(convert_data, "s1126066_HW1.csv", row.names = FALSE)
library(dplyr)
library(tidyr)
library(arules)
x = read.csv("input1.csv", sep = ",", header = T)
convert_data = x %>%
mutate(across(where(~ is.numeric(.) | is.factor(.) | is.logical(.)), as.character))%>%
pivot_longer(cols = -USERID, values_to = "Time",  names_to = "Event") %>%
mutate(NUMBER_USERID = as.numeric(gsub("\\D", "", USERID) ))%>%
mutate(Time = case_when(Time == "s" ~ -1, Time == "e" ~ Inf, TRUE ~ as.numeric(gsub("\\D", "", Time)))) %>%
filter(!is.na(Time) & Time != "") %>%
arrange(NUMBER_USERID, Time) %>%
group_by(USERID) %>%
mutate(Time = row_number()) %>%
ungroup() %>%
select(USERID, Time, Event)
print(convert_data)
library(shiny); runApp('E:/main2/main.r')
library(shiny); runApp('E:/main2/main.r')
library(shiny); runApp('D:/main/global.r')
library(shiny); runApp('D:/main/global.r')
